{"ast":null,"code":"var _jsxFileName = \"/Users/christophermelby/Desktop/ClickGame/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Characters from \"./Characters.json\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Navbar from \"./components/Navbar\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answerText: \"Make a Guess!\",\n      score: 0,\n      topScore: 0,\n      Characters,\n      clickedIds: []\n    };\n\n    this.getClicked = clicked => {\n      if (this.state.clickedIds.includes(clicked)) {\n        this.setState({\n          answerText: \"You Loose!\"\n        });\n\n        if (this.state.topScore < this.state.score) {\n          this.setState({\n            topScore: this.state.score\n          });\n        }\n\n        this.setState({\n          score: 0\n        });\n        this.setState({\n          clickedIds: []\n        });\n      } else {\n        this.setState({\n          clickedIds: [...this.state.clickedIds, clicked]\n        });\n        this.setState({\n          answerText: \"Correct Guess!!\"\n        });\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      var newList = this.state.list;\n      this.shuffle(newList);\n    };\n\n    this.shuffle = newList => {\n      let i = newList.length - 1;\n\n      for (; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = newList[i];\n        newList[i] = newList[j];\n        newList[j] = temp;\n      }\n\n      this.setState({\n        list: newList\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"answerText=\", this.state.answerText, \"score=\", this.state.score, \"topScore=\", this.state.topScore), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Don't Click The Same Character!\"), this.state.Characters.map(character => React.createElement(CharacterCard, {\n      removeCharacter: this.removeFriend,\n      id: character.id,\n      key: character.id,\n      image: character.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/christophermelby/Desktop/ClickGame/my-app/src/App.js"],"names":["React","Component","Wrapper","Title","Characters","CharacterCard","Navbar","App","state","answerText","score","topScore","clickedIds","getClicked","clicked","includes","setState","newList","list","shuffle","i","length","j","Math","floor","random","temp","render","map","character","removeFriend","id","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Characters from \"./Characters.json\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Navbar from \"./components/Navbar\";\nimport './App.css';\n\n\nclass App extends Component {\n\nstate = {\n  answerText: \"Make a Guess!\",\n  score: 0,\n  topScore: 0,\n  Characters,\n  clickedIds: []\n}\ngetClicked = (clicked) => {\n\n  if (this.state.clickedIds.includes(clicked)) {\n    this.setState({ answerText: \"You Loose!\" });\n    if (this.state.topScore < this.state.score) {\n      this.setState({ topScore: this.state.score })\n    }\n    this.setState({ score: 0 })\n    this.setState({ clickedIds: [] });\n  } else {\n    this.setState({ clickedIds: [...this.state.clickedIds, clicked] })\n    this.setState({ answerText: \"Correct Guess!!\" });\n    this.setState({ score: this.state.score + 1 })\n  }\n  var newList = this.state.list;\n  this.shuffle(newList)\n\n};\n\nshuffle = (newList) =>{\n  let i = newList.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = newList[i];\n    newList[i] = newList[j];\n    newList[j] = temp;\n  }\n  this.setState({ list: newList })\n}\n\n\nrender() {\n  return (\n    <Wrapper>\n\n      <Navbar>\n          answerText={this.state.answerText}\n          score={this.state.score}\n          topScore={this.state.topScore}\n      </Navbar>\n   \n    <Title>Don't Click The Same Character!</Title>\n    {this.state.Characters.map(character => (\n      <CharacterCard\n      removeCharacter={this.removeFriend}\n        id={character.id}\n        key={character.id}\n        image={character.image}\n\n      />\n    ))}\n  </Wrapper>\n  );\n}\n\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}