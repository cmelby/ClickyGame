{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/CharacterCard/index.js","components/Navbar/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","CharacterCard","alt","id","src","image","onClick","clickHandler","Navbar","bannerText","score","topScore","App","state","Characters","clickedIds","clicked","includes","setState","newCharacters","shuffleCharacters","i","length","j","Math","floor","random","temp","this","map","val","key","Component","ReactDOM","render","document","getElementById"],"mappings":"g25GAWeA,MARf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAChB,yBAAKA,UAAU,OACVD,EAAME,Y,MCCJC,MAJf,SAAeH,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAME,W,aCUvBE,MAXf,SAAuBJ,GACrB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,GAAIC,IAAKP,EAAMQ,MAC/BC,QAAS,kBAAKT,EAAMU,aAAaV,EAAMM,U,MCQhCK,MAZf,SAAgBX,GACZ,OACA,6BACI,yBAAKC,UAAU,UACf,0CACA,4BAAKD,EAAMY,YACX,sCAAYZ,EAAMa,MAAlB,cAAoCb,EAAMc,aC+DnCC,G,iNA9DfC,MAAQ,CACNJ,WAAY,eACZC,MAAO,EACPC,SAAU,EACVG,aACAC,WAAY,I,EAGdR,aAAe,SAAAS,GAET,EAAKH,MAAME,WAAWE,SAASD,IACjC,EAAKE,SAAS,CAAET,WAAY,oBACxB,EAAKI,MAAMF,SAAW,EAAKE,MAAMH,OACnC,EAAKQ,SAAS,CAAEP,SAAU,EAAKE,MAAMH,QAEvC,EAAKQ,SAAS,CAAER,MAAO,IACvB,EAAKQ,SAAS,CAAEH,WAAY,OAE5B,EAAKG,SAAS,CAAEH,WAAW,GAAD,mBAAM,EAAKF,MAAME,YAAjB,CAA6BC,MACvD,EAAKE,SAAS,CAAET,WAAY,oBAC5B,EAAKS,SAAS,CAAER,MAAO,EAAKG,MAAMH,MAAQ,KAE5C,IAAIS,EAAgB,EAAKN,MAAMC,WAC/B,EAAKM,kBAAkBD,I,EAIzBC,kBAAoB,SAACD,GAEnB,IADA,IAAIE,EAAIF,EAAcG,OAAS,EACxBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOR,EAAcE,GAC3BF,EAAcE,GAAKF,EAAcI,GACjCJ,EAAcI,GAAKI,EAErB,EAAKT,SAAS,CAAEJ,WAAYK,K,wEAGpB,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACIV,WAAYmB,KAAKf,MAAMJ,WACvBC,MAAOkB,KAAKf,MAAMH,MAClBC,SAAUiB,KAAKf,MAAMF,WAEzB,kBAAC,EAAD,yCACF,kBAAC,EAAD,KACGiB,KAAKf,MAAMC,WAAWe,KAAI,SAACC,GAC1B,OAAO,kBAAC,EAAD,CACLvB,aAAc,EAAKA,aACnBJ,GAAI2B,EAAI3B,GACR4B,IAAKD,EAAI3B,GACTE,MAAOyB,EAAIzB,iB,GAvDH2B,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a5f43258.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">\n        <div className=\"row\">\n            {props.children}\n      </div>\n    </div>\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h2 className=\"title\">{props.children}</h2>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.id} src={props.image} \n        onClick={()=> props.clickHandler(props.id)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterCard;\n\n","\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n    <div>\n        <nav className=\"navbar\">\n        <h2>Click Game</h2>\n        <h3>{props.bannerText}</h3>\n        <h3>Score: {props.score} Top Score {props.topScore}</h3>\n        </nav>\n    </div>\n    );\n};\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Characters from \"./Characters.json\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Navbar from \"./components/Navbar\";\nimport './App.css';\n\n// CLASS COMPONENT...............\nclass App extends Component {\n\nstate = {\n  bannerText: \"Click A Card\",\n  score: 0,\n  topScore: 0,\n  Characters,\n  clickedIds: []\n}\n// CLICK HANDLER FOR CHANGING STATE AND SHUFFLING CARDS....\nclickHandler = clicked => {\n\n  if (this.state.clickedIds.includes(clicked)) {\n    this.setState({ bannerText: \"Sorry You Lost!\" });\n    if (this.state.topScore < this.state.score) {\n      this.setState({ topScore: this.state.score })\n    }\n    this.setState({ score: 0 })\n    this.setState({ clickedIds: [] });\n  } else {\n    this.setState({ clickedIds: [...this.state.clickedIds, clicked] })\n    this.setState({ bannerText: \"Correct Guess!!\" });\n    this.setState({ score: this.state.score + 1 })\n  }\n  var newCharacters = this.state.Characters;\n  this.shuffleCharacters(newCharacters)\n\n};\n// SHUFFLE CHARACTER CARDS........\nshuffleCharacters = (newCharacters) =>{\n  let i = newCharacters.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = newCharacters[i];\n    newCharacters[i] = newCharacters[j];\n    newCharacters[j] = temp;\n  }\n  this.setState({ Characters: newCharacters })\n}\n// RENDER FUNCTION............\nrender() {\n  return (\n    <div>\n      <Navbar\n          bannerText={this.state.bannerText}\n          score={this.state.score}\n          topScore={this.state.topScore}\n      />\n      <Title>Don't Click The Same Celeb Twice</Title>\n    <Wrapper>\n      {this.state.Characters.map((val) => {\n        return <CharacterCard\n          clickHandler={this.clickHandler}\n          id={val.id}\n          key={val.id}\n          image={val.image}\n        />\n      })}\n      </Wrapper>\n    </div>\n  );\n}\n\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}